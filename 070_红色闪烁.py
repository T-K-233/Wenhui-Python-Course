""" 070_红色闪烁.py
    我们以前用的是颜色字符串来表示颜色，在python海龟画图中我们能用三个从0到255的数值来表示一种颜色。
    例：(255,0,0)表示的是红色，(0,255,0)表示的是绿色，(0,0,255)表示的是蓝色。
    用这种方法表示颜色叫RGB表示法，R即red，代表红色。G即green代表绿色。B即Blue代表蓝色。
    在计算机中所有的颜色都是用RGB三种颜色合成的。
    我们把RGB三种颜色都分成256份。让它们的值从0到255，如果R的值为0的话，表示红色份量为0。
    即没有红色，当红色的份量一直增大到最后为255的时候，就是红色最红的时候。
    当G的值为0的话，表示绿色份量为0，即没有绿色，G的值一直增大，就会让绿色的份量越来越多。
    当B的值越来越大，蓝色的份量也是越来越多。
    本程序演示的是红色的份量越来越多，小海龟越来越红，它的其它颜色份量都为0。
    如果R和G的份量同时越来越多，小海龟的颜色会怎么样呢？（把B份量设为0)
"""
from turtle import *
bgcolor("black")

红龟 = Turtle(visible=False)
#红龟.color('black','black')      #分别设定海龟的画笔颜色和填充颜色
红龟.shapesize(5)                #让海龟变大为原来的5倍
红龟.penup()
红龟.getscreen().colormode(255)
红龟.goto(-100, 0)
红龟.showturtle()
i = 0
def 发光():
    global i                     #声明i是全局变量，即这里的i是函数外面定义的i  
    红龟.fillcolor(i, 0, 0)        #设定龟的填充颜色为(i,0,0)
    i = i + 1
    i = i % 256                    #对255取余，因为每种颜色份量的最大值只能是255
    title("当前RGB值：(" + str(i) + ", 0, 0)")
    ontimer(发光, 1)             #每10毫秒调用一次发光这个函数  
发光()

 






